cmake_minimum_required(VERSION 3.8)
project(ufomap_msgs)

set(CMAKE_CXX_STANDARD 17)

# Find dependencies
find_package(ament_cmake REQUIRED)
find_package(rosidl_default_generators REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(std_msgs REQUIRED)
find_package(rclcpp REQUIRED)
find_package(ufomap REQUIRED)

# Define message and service files
set(MSG_FILES
  "msg/AABB.msg"
  "msg/BoundingVolume.msg"
  "msg/Frustum.msg"
  "msg/LineSegment.msg"
  "msg/OBB.msg"
  "msg/Plane.msg"
  "msg/Point.msg"
  "msg/Ray.msg"
  "msg/Sphere.msg"
  "msg/UFOMap.msg"
  "msg/UFOMapMetaData.msg"
  "msg/UFOMapStamped.msg"
)

set(SRV_FILES
  "srv/ClearVolume.srv"
  "srv/GetMap.srv"
  "srv/Reset.srv"
  "srv/SaveMap.srv"
)

# Generate message and service interfaces
rosidl_generate_interfaces(${PROJECT_NAME}
  ${MSG_FILES}
  ${SRV_FILES}
  DEPENDENCIES geometry_msgs std_msgs
)

# Specify include directories
include_directories(include)

# Create the conversion library
add_library(ufomap_msgs_conversion STATIC src/conversions.cpp)

# Link the necessary libraries
target_link_libraries(ufomap_msgs_conversion
  PUBLIC
    rclcpp::rclcpp
    UFO::Map
)

# Install the library
install(TARGETS ufomap_msgs_conversion
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib
  RUNTIME DESTINATION bin
)

# Install headers
install(DIRECTORY include/${PROJECT_NAME}/
  DESTINATION include/${PROJECT_NAME}
  FILES_MATCHING PATTERN "*.h"
)

# Install message and service definitions
install(DIRECTORY msg/ srv/
  DESTINATION share/${PROJECT_NAME}
)

# ROS 2 package declaration
ament_package()
